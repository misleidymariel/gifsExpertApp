{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifsGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","cats","preventDefault","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifsGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkBxC,OAEI,sBAAMC,SAZO,SAACC,GAEfH,EAAWI,OAAOC,OAAS,IAC1BP,GAAe,SAAAQ,GAAI,OAAMN,GAAN,mBAAqBM,OACxCL,EAAc,KAGdE,EAAEI,kBAKF,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAe,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAGGqB,EDrB0BK,CAAa1B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,6BAAKpB,IAEJoB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfxBgB,EAAe,WAAM,MAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MChB/B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d2720e7c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats,]);\r\n            setInputValue('');\r\n            };\r\n\r\n            e.preventDefault();\r\n        }\r\n        \r\n        return (\r\n\r\n            <form onSubmit={handleSubmit} >\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n    \r\n        )\r\n    }\r\n\r\n   \r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=U6sggE1TNi9ItTiLfPSYxwPIwYfHkxoZ`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    //console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifsGridItem = ({ title, url}) => {\r\n\r\n    //console.log({id, title, url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifsGridItem } from './GifsGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifsGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n\r\n                    ))\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../components/helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GitExpertApp = () => {\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    // const handlenAdd = ()=>{\r\n    //   setCategories( cats => [...cats, 'Misleidy']);\r\n\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key = {category}\r\n                        category ={ category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GitExpertApp } from './GitExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n  \n);\n\n// gitExpertApp \n\n"],"sourceRoot":""}